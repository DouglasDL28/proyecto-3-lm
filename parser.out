Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> create
Rule 1     create -> expression
Rule 2     create -> equal_var
Rule 3     create -> empty
Rule 4     equal_var -> VAR EQUALS expression
Rule 5     expression -> expression CONJUNCION expression
Rule 6     expression -> expression DISYUNCION expression
Rule 7     expression -> expression BICONDICIONAL expression
Rule 8     expression -> expression CONDICIONAL expression
Rule 9     expression -> NEGACION expression
Rule 10    expression -> VAR
Rule 11    expression -> CONST
Rule 12    empty -> <empty>
Rule 13    expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

BICONDICIONAL        : 7
CONDICIONAL          : 8
CONJUNCION           : 5
CONST                : 11
DISYUNCION           : 6
EQUALS               : 4
LPAREN               : 13
NEGACION             : 9
RPAREN               : 13
VAR                  : 4 10
error                : 

Nonterminals, with rules where they appear

create               : 0
empty                : 3
equal_var            : 2
expression           : 1 4 5 5 6 6 7 7 8 8 9 13

Parsing method: LALR

state 0

    (0) S' -> . create
    (1) create -> . expression
    (2) create -> . equal_var
    (3) create -> . empty
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN
    (4) equal_var -> . VAR EQUALS expression
    (12) empty -> .

    NEGACION        shift and go to state 5
    VAR             shift and go to state 6
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8
    $end            reduce using rule 12 (empty -> .)

    create                         shift and go to state 1
    expression                     shift and go to state 2
    equal_var                      shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> create .



state 2

    (1) create -> expression .
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    $end            reduce using rule 1 (create -> expression .)
    CONJUNCION      shift and go to state 9
    DISYUNCION      shift and go to state 10
    BICONDICIONAL   shift and go to state 11
    CONDICIONAL     shift and go to state 12


state 3

    (2) create -> equal_var .

    $end            reduce using rule 2 (create -> equal_var .)


state 4

    (3) create -> empty .

    $end            reduce using rule 3 (create -> empty .)


state 5

    (9) expression -> NEGACION . expression
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN

    NEGACION        shift and go to state 5
    VAR             shift and go to state 14
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 13

state 6

    (10) expression -> VAR .
    (4) equal_var -> VAR . EQUALS expression

    CONJUNCION      reduce using rule 10 (expression -> VAR .)
    DISYUNCION      reduce using rule 10 (expression -> VAR .)
    BICONDICIONAL   reduce using rule 10 (expression -> VAR .)
    CONDICIONAL     reduce using rule 10 (expression -> VAR .)
    $end            reduce using rule 10 (expression -> VAR .)
    EQUALS          shift and go to state 15


state 7

    (11) expression -> CONST .

    CONJUNCION      reduce using rule 11 (expression -> CONST .)
    DISYUNCION      reduce using rule 11 (expression -> CONST .)
    BICONDICIONAL   reduce using rule 11 (expression -> CONST .)
    CONDICIONAL     reduce using rule 11 (expression -> CONST .)
    $end            reduce using rule 11 (expression -> CONST .)
    RPAREN          reduce using rule 11 (expression -> CONST .)


state 8

    (13) expression -> LPAREN . expression RPAREN
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN

    NEGACION        shift and go to state 5
    VAR             shift and go to state 14
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 16

state 9

    (5) expression -> expression CONJUNCION . expression
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN

    NEGACION        shift and go to state 5
    VAR             shift and go to state 14
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 17

state 10

    (6) expression -> expression DISYUNCION . expression
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN

    NEGACION        shift and go to state 5
    VAR             shift and go to state 14
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 18

state 11

    (7) expression -> expression BICONDICIONAL . expression
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN

    NEGACION        shift and go to state 5
    VAR             shift and go to state 14
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 19

state 12

    (8) expression -> expression CONDICIONAL . expression
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN

    NEGACION        shift and go to state 5
    VAR             shift and go to state 14
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 20

state 13

    (9) expression -> NEGACION expression .
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    CONJUNCION      reduce using rule 9 (expression -> NEGACION expression .)
    DISYUNCION      reduce using rule 9 (expression -> NEGACION expression .)
    BICONDICIONAL   reduce using rule 9 (expression -> NEGACION expression .)
    CONDICIONAL     reduce using rule 9 (expression -> NEGACION expression .)
    $end            reduce using rule 9 (expression -> NEGACION expression .)
    RPAREN          reduce using rule 9 (expression -> NEGACION expression .)

  ! CONJUNCION      [ shift and go to state 9 ]
  ! DISYUNCION      [ shift and go to state 10 ]
  ! BICONDICIONAL   [ shift and go to state 11 ]
  ! CONDICIONAL     [ shift and go to state 12 ]


state 14

    (10) expression -> VAR .

    CONJUNCION      reduce using rule 10 (expression -> VAR .)
    DISYUNCION      reduce using rule 10 (expression -> VAR .)
    BICONDICIONAL   reduce using rule 10 (expression -> VAR .)
    CONDICIONAL     reduce using rule 10 (expression -> VAR .)
    $end            reduce using rule 10 (expression -> VAR .)
    RPAREN          reduce using rule 10 (expression -> VAR .)


state 15

    (4) equal_var -> VAR EQUALS . expression
    (5) expression -> . expression CONJUNCION expression
    (6) expression -> . expression DISYUNCION expression
    (7) expression -> . expression BICONDICIONAL expression
    (8) expression -> . expression CONDICIONAL expression
    (9) expression -> . NEGACION expression
    (10) expression -> . VAR
    (11) expression -> . CONST
    (13) expression -> . LPAREN expression RPAREN

    NEGACION        shift and go to state 5
    VAR             shift and go to state 14
    CONST           shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 21

state 16

    (13) expression -> LPAREN expression . RPAREN
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    RPAREN          shift and go to state 22
    CONJUNCION      shift and go to state 9
    DISYUNCION      shift and go to state 10
    BICONDICIONAL   shift and go to state 11
    CONDICIONAL     shift and go to state 12


state 17

    (5) expression -> expression CONJUNCION expression .
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    CONJUNCION      reduce using rule 5 (expression -> expression CONJUNCION expression .)
    DISYUNCION      reduce using rule 5 (expression -> expression CONJUNCION expression .)
    BICONDICIONAL   reduce using rule 5 (expression -> expression CONJUNCION expression .)
    CONDICIONAL     reduce using rule 5 (expression -> expression CONJUNCION expression .)
    $end            reduce using rule 5 (expression -> expression CONJUNCION expression .)
    RPAREN          reduce using rule 5 (expression -> expression CONJUNCION expression .)

  ! CONJUNCION      [ shift and go to state 9 ]
  ! DISYUNCION      [ shift and go to state 10 ]
  ! BICONDICIONAL   [ shift and go to state 11 ]
  ! CONDICIONAL     [ shift and go to state 12 ]


state 18

    (6) expression -> expression DISYUNCION expression .
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    CONJUNCION      reduce using rule 6 (expression -> expression DISYUNCION expression .)
    DISYUNCION      reduce using rule 6 (expression -> expression DISYUNCION expression .)
    BICONDICIONAL   reduce using rule 6 (expression -> expression DISYUNCION expression .)
    CONDICIONAL     reduce using rule 6 (expression -> expression DISYUNCION expression .)
    $end            reduce using rule 6 (expression -> expression DISYUNCION expression .)
    RPAREN          reduce using rule 6 (expression -> expression DISYUNCION expression .)

  ! CONJUNCION      [ shift and go to state 9 ]
  ! DISYUNCION      [ shift and go to state 10 ]
  ! BICONDICIONAL   [ shift and go to state 11 ]
  ! CONDICIONAL     [ shift and go to state 12 ]


state 19

    (7) expression -> expression BICONDICIONAL expression .
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    BICONDICIONAL   reduce using rule 7 (expression -> expression BICONDICIONAL expression .)
    CONDICIONAL     reduce using rule 7 (expression -> expression BICONDICIONAL expression .)
    $end            reduce using rule 7 (expression -> expression BICONDICIONAL expression .)
    RPAREN          reduce using rule 7 (expression -> expression BICONDICIONAL expression .)
    CONJUNCION      shift and go to state 9
    DISYUNCION      shift and go to state 10

  ! CONJUNCION      [ reduce using rule 7 (expression -> expression BICONDICIONAL expression .) ]
  ! DISYUNCION      [ reduce using rule 7 (expression -> expression BICONDICIONAL expression .) ]
  ! BICONDICIONAL   [ shift and go to state 11 ]
  ! CONDICIONAL     [ shift and go to state 12 ]


state 20

    (8) expression -> expression CONDICIONAL expression .
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    BICONDICIONAL   reduce using rule 8 (expression -> expression CONDICIONAL expression .)
    CONDICIONAL     reduce using rule 8 (expression -> expression CONDICIONAL expression .)
    $end            reduce using rule 8 (expression -> expression CONDICIONAL expression .)
    RPAREN          reduce using rule 8 (expression -> expression CONDICIONAL expression .)
    CONJUNCION      shift and go to state 9
    DISYUNCION      shift and go to state 10

  ! CONJUNCION      [ reduce using rule 8 (expression -> expression CONDICIONAL expression .) ]
  ! DISYUNCION      [ reduce using rule 8 (expression -> expression CONDICIONAL expression .) ]
  ! BICONDICIONAL   [ shift and go to state 11 ]
  ! CONDICIONAL     [ shift and go to state 12 ]


state 21

    (4) equal_var -> VAR EQUALS expression .
    (5) expression -> expression . CONJUNCION expression
    (6) expression -> expression . DISYUNCION expression
    (7) expression -> expression . BICONDICIONAL expression
    (8) expression -> expression . CONDICIONAL expression

    $end            reduce using rule 4 (equal_var -> VAR EQUALS expression .)
    CONJUNCION      shift and go to state 9
    DISYUNCION      shift and go to state 10
    BICONDICIONAL   shift and go to state 11
    CONDICIONAL     shift and go to state 12


state 22

    (13) expression -> LPAREN expression RPAREN .

    CONJUNCION      reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    DISYUNCION      reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    BICONDICIONAL   reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    CONDICIONAL     reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (expression -> LPAREN expression RPAREN .)

